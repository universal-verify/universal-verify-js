class UniversalVerify{constructor(e){if(!e||"string"!=typeof e)throw new Error("clientId is required");this.clientId=e}createAuthorizationUrl(e={}){if(!e.codeChallenge||"string"!=typeof e.codeChallenge)throw new Error("codeChallenge is required");let r={client_id:this.clientId,code_challenge:e.codeChallenge};return e.redirectUrl&&(r.redirect_uri=e.redirectUrl),e.scope&&(r.scope=e.scope),e.state&&(r.state=e.state),e.nonce&&(r.nonce=e.nonce),r=new URLSearchParams(r),`https://universalverify.com/connect?${r.toString()}`}parseRedirectUrl(){const e=new URLSearchParams(window.location.search);return{code:e.get("code"),state:e.get("state")}}static get version(){return"0.0.1"}}export{UniversalVerify as default};
